@import url("https://fonts.googleapis.com/css2?family=Kumbh+Sans:wght@400;700&display=swap");
/*----------  base
------------------------------------------------------------------------------*/
/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

body {
  font-family: "Kumbh Sans";
  font-size: 12px;
}

p {
  font-size: fsize_primary;
}

h2 {
  font-size: 32px;
  font-weight: 700;
}

h3 {
  font-size: 14px;
}

/*----------  components
------------------------------------------------------------------------------*/
.questions-wrapper {
  background-color: white;
  padding: 67px 96px 83px 16px;
  border-radius: 22px;
}

.question {
  border-bottom: 1px solid hsl(240deg, 5%, 91%);
  padding-top: 17px;
  padding-bottom: 17px;
  margin-bottom: 2px;
}

.question-header {
  position: relative;
  width: 100%;
  padding-right: 12px;
}
.question-header:hover {
  cursor: pointer;
}
.question-header:hover h3 {
  color: hsl(14deg, 88%, 65%);
}
.question-header::after {
  position: absolute;
  content: "";
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  z-index: 50;
}
.question-header h3, .question-header img {
  display: inline-block;
}
.question-header h3 {
  letter-spacing: 0.005em;
  color: hsl(237deg, 12%, 33%);
  margin-bottom: 0;
  transition: margin-bottom 0.3s;
}
.question-header img {
  float: right;
  margin-top: 4px;
}

.question-body {
  display: block;
  color: black;
  color: hsl(240deg, 6%, 50%);
  max-height: 0px;
  opacity: 0;
  transition: max-height 0.5s, opacity 0.3s;
}
.question-body p {
  line-height: 18px;
  letter-spacing: 0.005em;
  padding-right: 15px;
}

.question-header.active {
  font-weight: 700;
}
.question-header.active img {
  transform: rotate(-180deg);
}
.question-header.active h3 {
  margin-bottom: 12px;
}

.question-header.active + .question-body {
  height: auto;
  max-height: 50px;
  opacity: 1;
}

@media screen and (max-width: 1040px) {
  .questions-wrapper {
    padding: 0px 60px 80px 60px;
  }
}
@media screen and (max-width: 630px) {
  .questions-wrapper {
    padding: 0px 24px 46px 24px;
  }
  .question-header {
    padding-right: 0px;
  }
  .question-header h3 {
    letter-spacing: -0.032em;
    padding-left: 1px;
  }
}
main {
  background-color: white;
  display: flex;
  flex-direction: row;
  justify-content: center;
  border-radius: 22px;
  width: 920px;
  margin: 0 auto;
}

.flex-item {
  flex: 1 1 460px;
  min-width: 460px;
}

.img-wrapper {
  width: 100%;
}
.img-wrapper img {
  width: 100%;
}

.illustration-imgs-lg {
  width: 100%;
  height: 100%;
  background-image: url("../../images/bg-pattern-desktop.svg");
  background-position: -575px -295px;
  background-repeat: no-repeat;
  position: relative;
  z-index: 10;
}

.img-wrapper {
  width: 100%;
  height: 100%;
}
.img-wrapper .illustration-img {
  width: 470px;
}

.img-wrapper-lg:first-of-type {
  display: block;
  position: relative;
  overflow: hidden;
}

.img-wrapper-lg:first-of-type > img {
  position: absolute;
  top: 70px;
  left: -82px;
}

.img-wrapper-lg:nth-of-type(2) {
  height: 0;
}

.img-wrapper-lg:nth-of-type(2) > img {
  position: absolute;
  top: 205px;
  left: -92px;
  width: 190px;
}

.illustration-imgs-sm {
  width: 100%;
  height: 100%;
  background-image: url("../../images/bg-pattern-mobile.svg");
  background-position: center 230px;
  background-repeat: no-repeat;
  background-size: 480px 210px;
  position: relative;
  z-index: 10;
  display: none;
  padding-bottom: 90px;
  padding-top: 40px;
}

@media screen and (max-width: 1040px) {
  main {
    flex-direction: column;
    width: auto;
  }
  .flex-item {
    flex: 1 1 0px;
    min-width: 0px;
  }
  .illustration-imgs-sm {
    display: block;
  }
  .illustration-imgs-lg {
    display: none;
  }
  .img-wrapper img {
    display: block;
    margin: 0 auto;
  }
}
@media screen and (max-width: 630px) {
  .illustration-imgs-sm {
    background-position: center 0px;
    background-repeat: no-repeat;
    background-size: unset;
  }
  .img-wrapper .illustration-img {
    position: absolute;
    width: 237px;
    top: -82%;
    left: 50%;
    transform: translateX(-50%);
  }
}
* {
  box-sizing: border-box;
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0, 0);
  border: 0;
}

body {
  background: rgb(175, 103, 233);
  background: linear-gradient(180deg, rgb(175, 103, 233) 20%, rgb(101, 101, 231) 73%);
  width: 100%;
  min-height: 100vh;
  padding: 129px 24px 40px 64px;
}

h2 {
  width: 100%;
  text-align: left;
  color: hsl(238deg, 29%, 16%);
  margin-bottom: 25px;
}

@media screen and (max-width: 1040px) {
  body {
    padding: 80px 40px;
  }
  h2 {
    text-align: center;
  }
}
@media screen and (max-width: 630px) {
  body {
    padding: 148px 24px 40px 24px;
  }
  h2 {
    text-align: center;
    padding-top: 4px;
    margin-bottom: 20px;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
